fn assert_never(msg) {
    assert(false, msg);
}

let mut truthy_string = "" and true;
let mut truthy_number = 1 and true;
let mut truthy_true = true and true;

if truthy_string {
    print("string coerced to true");
} else {
    assert_never("strings should be truthy");
}

if truthy_number {
    print("number coerced to true");
} else {
    assert_never("number should be truthy");
}

if truthy_true {
    print("true is true");
} else {
    assert_never("true should be truthy");
}


let mut falsey_number = 0 and true;
let mut falsey_true = true and false;

if falsey_number {
    assert_never("number should be falsey");
} else {
    print("number is false");
}

if falsey_true {
    assert_never("false should be falsey");
} else {
    print("false is false");
}

