[
  {
    "name": "Make closure test",
    "description": "Expect functions to be able to make closures",
    "file": "make_closure.lox",
    "expect": {
      "to_output": ["doughnut", "bagel"]
    }
  },
  {
    "name": "Arg Call Test",
    "description": "Expect functions to be callable with multiple arguments",
    "reason": "To check arg func calls continue to work",
    "file": "arg_call.lox",
    "expect": {
      "to_output": ["Hello a", "b..."]
    }
  },
  {
    "name": "Closure Test",
    "description": "Expect closures to print the most recent value within their scope",
    "reason": "Closures should be able to get context from the function/scope they were created in",
    "file": "closure_test.lox",
    "expect": {
      "to_output": ["outer"]
    }
  },
  {
    "name": "Recursion Test",
    "description": "Expect 6765 to be returned from calling fib(20) recursively",
    "reason": "To check functions are able to be called recursively",
    "file": "recursion.lox",
    "expect": {
      "to_output": [6765]
    }
  },
  {
    "name": "Free Order Test",
    "description": "Expect first() to be able to call second() before it is defined",
    "reason": "To check functions are lazily evaluated",
    "file": "free_order.lox",
    "expect": {
      "to_output": [7, 3]
    }
  },
  {
    "name": "Local Function Test",
    "description": "Expect functions are able to be defined within other functions or scopes",
    "reason": "To check functions work correctly when not defined globally",
    "file": "scoped_func.lox",
    "expect": {
      "to_output": [12345, "Scoped function Result"]
    }
  },
  {
    "name": "Global Function Test",
    "description": "Expect defined functions to correctly output the set strings",
    "reason": "To check functions work correctly",
    "file": "global_func.lox",
    "expect": {
      "to_output": ["Function Test:", "Hello", "world", "fin"]
    }
  },
  {
    "name": "Max Recursion Test",
    "description": "Expect recursion is limited to limit stack overflow",
    "reason": "To check recursion is limited",
    "file": "rec_max.lox",
    "expect": {
      "to_fail": true,
      "has_return_code": 70,
      "on_line": 7
    }
  },
  {
    "name": "Return value test",
    "description": "Expect functions to be able to return values using the 'return' keyword",
    "reason": "To check functions return as expected",
    "file": "return.lox",
    "expect": {}
  },
  {
    "name": "Immutable args test",
    "description": "Expect args not marked with 'mut' to not allow assignment or modification",
    "file": "immutable_args.lox",
    "expect": {
      "to_fail": true,
      "on_line": 2,
      "has_return_code": 65,
      "to_error": ["Variable isn't mutable"]
    }
  },
  {
    "name": "Mutable args test",
    "description": "Expect args marked with 'mut' to allow assignment and modification",
    "file": "mutable_args.lox",
    "expect": { }
  },
  {
    "name": "Too many args test",
    "description": "Expect number of args to be checked before a function is called",
    "reason": "To check too many args being passed to a function results in an error",
    "file": "too_many_args.lox",
    "expect": {
      "to_fail": true,
      "on_line": 5,
      "has_return_code": 70,
      "to_error": ["expected 1, have 5"]
    }
  },
  {
    "name": "Too few args test",
    "description": "Expect number of args to be checked before a function is called",
    "reason": "To check too few args being passed to a function results in an error",
    "file": "too_few_args.lox",
    "expect": {
      "to_fail": true,
      "on_line": 4,
      "has_return_code": 70,
      "to_error": ["expected 7, have 1"]
    }
  },
  {
    "name": "Max arg count test",
    "description": "Expect number of args to be limited to 255",
    "file": "max_arglist.lox",
    "expect": {
      "to_fail": true,
      "has_return_code": 65,
      "on_line": 257,
      "to_error": ["Can't have more than 255 parameters"]
    }
  },
  {
    "name": "Trailing comma test",
    "description": "Allow commas to be trailing for functions calls and defines",
    "file": "trailing_comma.lox",
    "expect": { }
  }
]