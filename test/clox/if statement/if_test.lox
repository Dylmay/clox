fn assert_never(msg) {
  assert(false, msg);
}

if true {
  print("true is true");
} else {
  assert_never("true must be true");
}

if false {
  assert_never("False should branch");
} else {
  print("false is not true");
}

if (true) {
  print("true is true. Parens are ignored");
} else {
  assert_never("true must be true (Parens)");
}

if (false) {
  assert_never("False should branch (Parens)");
} else {
  print("false is not true. Parens are ignored");
}

if true {
} else {
  assert_never("empty if statements should still work correctly (true)");
}

if false {
   assert_never("empty if statements should still work correctly (false)");
} else {}
